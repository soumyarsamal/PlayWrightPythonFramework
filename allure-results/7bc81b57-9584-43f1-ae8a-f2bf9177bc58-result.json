{"name": "test_get_api", "status": "broken", "statusDetails": {"message": "TypeError: _path_exists: path should be string, bytes, os.PathLike or integer, not dict", "trace": "request = <SubRequest 'config' for <Function test_get_api>>\n\n    @pytest.fixture(scope=\"session\")\n    def config(request):\n        env = request.config.getoption(\"--env\")  # Get the environment from command line\n        # common environment level properties\n        config_file_path = os.path.join(f\"playwrightpython/config/{env}\", f\"{env}.json\")\n        environment = 'ift' if 'ift' in env else 'dev'\n        print(environment)\n    \n        # common login credential for dev and ift\n        credential_file_path = os.path.join(\"playwrightpython/config\", f\"{environment}_login_credential.json\")\n    \n        # common DB credential for dev and ift\n        db_cred_file_path = os.path.join(\"playwrightpython/config\", f\"{environment}_db_credential.json\")\n    \n        credentials_data = load_credentials(credential_file_path)\n        LoginCredentials.initialize(credentials_data)\n    \n        db_data = load_db_credentials(config_file_path)\n        DBDetails.initialize(db_data)\n    \n        db_credentials_data = load_db_credentials(db_cred_file_path)\n        DBCredDetails.initialize(db_credentials_data)\n    \n>       if not os.path.exists(db_credentials_data):\nE       TypeError: _path_exists: path should be string, bytes, os.PathLike or integer, not dict\n\nconftest.py:82: TypeError"}, "start": 1745771842801, "stop": 1745771842801, "uuid": "a8367415-68e6-4ac1-9f51-4335a6cad47a", "historyId": "87c0b90b5b794f9e33c86b415f6d39de", "testCaseId": "87c0b90b5b794f9e33c86b415f6d39de", "fullName": "tests.api.test_api#test_get_api", "labels": [{"name": "feature", "value": "API test"}, {"name": "severity", "value": "minor"}, {"name": "tag", "value": "smoke"}, {"name": "parentSuite", "value": "tests.api"}, {"name": "suite", "value": "test_api"}, {"name": "host", "value": "Soumya"}, {"name": "thread", "value": "13992-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.api.test_api"}]}